####################################################################################################################
# Шахнович Дмитрий ИУ7-12Б
#
#
# Программа которая вычисляет длины сторон и высоту, проведённую из наименьшего угла треугольника
# по заданным координатам точек на плоскости этого треугольника,
# а также определяет является ли треугольник прямоугольным.
# Затем, по ввёденным координатам точки определяет, находится ли она внутри треугольника,если да,
# то считает расстояние до ближайшей стороны
####################################################################################################################
import math as m

# Блок ввода 1-ой части
x1, y1 = [int(i) for i in input("Введите координаты 1-ой точки через пробел: ").split()]
x2, y2 = [int(i) for i in input("Введите координаты 2-ой точки через пробел: ").split()]
x3, y3 = [int(i) for i in input("Введите координаты 3-ей точки через пробел: ").split()]

# Блок вычислений 1-ой части

side1 = m.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)  # По формуле из теоремы пифагора находим все стороны треугольника
side2 = m.sqrt((x1 - x3) ** 2 + (y1 - y3) ** 2)
side3 = m.sqrt((x2 - x3) ** 2 + (y2 - y3) ** 2)

minside = min(side1, side2, side3)  # Находим минимальную сторону
maxside = max(side1, side2, side3)  # Находим максимальную сторону
avside = (side1 + side2 + side3) - maxside - minside  # Находим среднюю сторону

if minside + avside == maxside:  # Проверяем, если точки лежат на одной прямой
    print("Три точки лежат на одной прямой, невозможно построить треугольник")
    exit()

if abs(minside ** 2 + avside ** 2 - maxside ** 2) <= 0.01:  # Проверяем является ли треугольник прямоугольным по теореме пифагора
    rect = True
else:
    rect = False

p = (side1 + side2 + side3) / 2  # Находим полупериметр треугольника
s = m.sqrt(p * (p - side1) * (p - side2) * (p - side3))  # Находим площадь треугольника по формуле Герона
min_angle_h = 2 * s / minside  # Меньшему углу противолежит меньшая сторона, поэтому представив как основание
# меньшую сторону из формулы площади находим высоту из меньшего угла

# Блок вывода 1-ой части
print(f"Трегольник{' ' if rect else ' не '}является прямоугольным, и имеет следующие стороны:"
      f" {minside:.7g}, {avside:.7g}, {maxside:.7g}")
print(f"Высота, проведенная из наименьшего угла равна: {min_angle_h:.7g}")

# Блок ввода 2-ой части
xp, yp = [int(i) for i in input("Введите координаты искомой точки через пробел: ").split()]

# Блоки вычислений и вывода 2-ой части
s1 = 0.5 * abs((x2 - x1) * (yp - y1) - (xp - x1) * (y2 - y1))  # Считаем всевозможные площади треугольников,
s2 = 0.5 * abs((x3 - x1) * (yp - y1) - (xp - x1) * (y3 - y1))  # образованных заданной точкой и сторонами
s3 = 0.5 * abs((x3 - x2) * (yp - y2) - (xp - x2) * (y3 - y2))  # исходного треугольника

if abs(s1 + s2 + s3 - s) <= 0.01:  # Если сумма площадей треугольников равна площади исходного, то точка лужит внутри
    h1 = 2 * s1 / side1  # Считаем расстояния от точки до всех сторон
    h2 = 2 * s2 / side2
    h3 = 2 * s3 / side3
    minh = min(h1, h2, h3)
    print(f"Заданная точка лежит внутри треугольника, и её минимальное расстояние до стороны равно: {minh:.7g}")
else:
    print("Заданная точка лежит вне треугольника")
