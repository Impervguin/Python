####################################################################################################################
# Шахнович Дмитрий ИУ7-12Б
#
# Программа для наиболее длинной непрерывной возрастающей последовательности целых чётных чисел.
####################################################################################################################
# Блок ввода
n = int(input("Введите количество элементов в списке: "))
if n < 1:
    print("Некорректное значение.")

lst = [int(input(f"{i + 1}-й элемент: ")) for i in range(n)]

# Блок обработки
max_n = [-1, 0]  # Начальный индекс и количество элементов наибольшей искомой последовательности
# Начальный индекс, количество элементов нынешней искомой последовательности
# (Если первый элемент подходит, то начинаем с него, иначе ставим как начальный следующий, но с количеством ноль)
now = [0, 1] if lst[0] % 2 == 0 else [1, 0]
for i in range(1, len(lst)):
    if lst[i] % 2 == 0 and lst[i] > lst[i - 1]:
        now[1] += 1  # Если данный элемент подходит, то длину нынешней увеличиваем на один
    else:
        if max_n[1] < now[1]:
            max_n = now  # Если длина нынешней больше максимальной, то она становится новой максимальной
        # Если нынешний элемент чётный, то он будет началом новой последовательности
        now = [i, 1] if lst[i] % 2 == 0 else [i + 1, 0]

if max_n[1] < now[1]:
    max_n = now  # Проверяем последнюю последовательность

# Блок вывода
if max_n[0] == -1:
    print("В списке нет подходящей последовательности.")
else:
    print(f"Искомая последовательность начинается с {max_n[0] + 1}-ого элемента и содержит {max_n[1]} элементов: ",
          end="")
    print(*lst[max_n[0]:max_n[0] + max_n[1]])
# for i in range(max_n[0], max_n[0] + max_n[1]):
